<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>WMYeah</title><link>https://www.wmyeah.com/</link><description>Recent content on WMYeah</description><image><url>https://www.wmyeah.com/uploads/og.webp</url><link>https://www.wmyeah.com/uploads/og.webp</link></image><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>A template by [Heksagon](https://www.heksagon.net "Your most friendly developer")</copyright><lastBuildDate>Sun, 02 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.wmyeah.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis</title><link>https://www.wmyeah.com/blog/redis_01/</link><pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/redis_01/</guid><description>目录：
1. 在Ubuntu 20.04 LTS安装最新版本Redis 2. PS: 1. 在Ubuntu 20.04 LTS安装最新版本Redis 添加redis源 add-apt-repository ppa:redislabs/redis apt update &amp;amp;&amp;amp; apt install redis systemctl enable redis-server.service 2. PS: 此操作基于（root）权限操作，如用普通用户可在命令行前加“sudo” 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>Windows msys2 环境集锦</title><link>https://www.wmyeah.com/blog/windows_msys2_01/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/windows_msys2_01/</guid><description>1. msys2 安装 mingw64后添加右键当前目录 msys 2. PS: 此操作基于（root）权限操作，如用普通用户可在命令行前加“sudo” 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>Golang--安装篇</title><link>https://www.wmyeah.com/blog/golang_install_01/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/golang_install_01/</guid><description>目录：
1. 在Windows安装 1.1. 在Windows下WSL2 Ubuntu20.0.4 2. 在Linux安装 2.1. 在Ubuntu中 3. PS: 1. 在Windows安装 1.1. 在Windows下WSL2 Ubuntu20.0.4 同Linux Ubuntu安装方式&amp;mdash;- 2. 在Linux安装 2.1. 在Ubuntu中 ``` sudo add-apt-repository ppa:longsleep/golang-backports sudo apt-get install golang-go
* 如果要安装指定版本 ``` sudo apt-get install golang-1.17-go ``` * 如果add-apt-repository不存在，通过以下命令安装进行按照： ``` sudo apt-get install software-properties-common sudo apt-get update ``` # 3. PS: * 此操作基于（root）权限操作，如用普通用户可在命令行前加“sudo” * 根据网上资料亲测整理，最终解释权归[WMYeah][1]所有! ------ [1]:http://www.wmyeah.com</description></item><item><title>About</title><link>https://www.wmyeah.com/about/</link><pubDate>Mon, 09 Jan 2023 02:20:05 +0800</pubDate><guid>https://www.wmyeah.com/about/</guid><description>关于我</description></item><item><title>GMP</title><link>https://www.wmyeah.com/blog/gmp/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/gmp/</guid><description> 使用 MSYS2 UCRT64 进行操作 // 安装 make pacman -S make 安装依赖 m4 pacman -S m4 $GMP_PATH GMP 解压后的目录 例如 [D:\Download\gmp-6.2.1] // 如果 mingw64 的目录是 [C:\Program Files\mingw64] cd /d/Download/gmp-6.2.1 ./configure --prefix=/c/mingw64 --enable-cxx --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --enable-shared --disable-static</description></item><item><title>Centos7.x安装最新版Docker</title><link>https://www.wmyeah.com/blog/docker_01/</link><pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/docker_01/</guid><description>卸载旧版 Docker 安装相关工具包 安装Docker源 阿里云 更新 yum 缓存并且安装 启动 Docker 并且设置开机自启 查看 Docker 版本 PS: 卸载旧版 Docker yum remove docker docker-common container-selinux docker-selinux docker-engine 安装相关工具包 yum install -y yum-utils 安装Docker源 # 官方 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 阿里云 yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 更新 yum 缓存并且安装 yum makecache fast &amp;amp;&amp;amp; yum install docker-ce -y 启动 Docker 并且设置开机自启 systemctl start docker &amp;amp;&amp;amp; systemctl enable docker 查看 Docker 版本 docker -v PS: 根据网上资料亲测整理，最终解释权归[WMYeah][1]所有!
参考资料:
[1]]:http://www.wmyeah.com</description></item><item><title>Windows WSL2 Ubuntu20.04开启systemctl服务</title><link>https://www.wmyeah.com/blog/windows_wsl_01/</link><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/windows_wsl_01/</guid><description>目录：
1. 开启systemctl服务 2. PS: 1. 开启systemctl服务 在升级为wsl2最新版后执行
echo -e &amp;#34;[boot]\nsystemd=true&amp;#34; | sudo tee -a /etc/wsl.conf 安装完后再PowerShell中重启WSL2
# 重启 wsl --shutdown 在WSL Linux系统中执行下面命令，查看systemctl是否启动
ps --no-headers -o comm 1 2. PS: 此操作基于（root）权限操作，如用普通用户可在命令行前加“sudo” 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>Adding Images</title><link>https://www.wmyeah.com/blog/images/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/images/</guid><description>Guide to adding images in Piko theme</description></item><item><title>Privacy Policy</title><link>https://www.wmyeah.com/legal/privacy/</link><pubDate>Thu, 21 Jan 2021 23:22:20 +0800</pubDate><guid>https://www.wmyeah.com/legal/privacy/</guid><description>This is the privacy policy page for Website Name (Website.com)</description></item><item><title>Terms and Conditions</title><link>https://www.wmyeah.com/legal/terms-and-conditions/</link><pubDate>Thu, 21 Jan 2021 23:22:20 +0800</pubDate><guid>https://www.wmyeah.com/legal/terms-and-conditions/</guid><description>This is the terms and conditions page for Website Name (Website.com)</description></item><item><title>CentOS8.X 安装后调优</title><link>https://www.wmyeah.com/blog/dev_linux_centos8_00/</link><pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_centos8_00/</guid><description>目录：
1. 部分常用开发工具安装 2. 安装epel源 3. 更换yum源为阿里云yum源（国内提速） 4. 关闭防火墙 5. 关闭selinux 6. 重启系统 使其生效 7. PS: 1. 部分常用开发工具安装 yum -y install nano vim wget curl net-tools lsof unzip unzip 2. 安装epel源 yum install epel-release 3. 更换yum源为阿里云yum源（国内提速） 备份yum源
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak 下载阿里云yum 源
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo 确保/etc/yum.repos.d/CentOS-Media.repo 文件中 enabled=0
vim /etc/yum.repos.d/CentOS-Media.repo 一步到位更新
yum clean all &amp;amp;&amp;amp; yum makecache &amp;amp;&amp;amp; yum update 4. 关闭防火墙 查看
systemctl status firewalld 关闭
systemctl stop firewalld 关闭开机自启</description></item><item><title>CentOS8.X 安装Python3.8.x</title><link>https://www.wmyeah.com/blog/dev_linux_centos8_python_01/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_centos8_python_01/</guid><description>目录：
1. 安装依赖 2. 安装Python3.8.2 2.1. 安装并配置python 2.2. 更换pip源加速pip下载速度（此处使用阿里云） 2.3. 更新pip 3. 番外 virtualenv 和 virtualenvwrapper 的安装 3.1. virtualenv 3.2. virtualenvwrapper 4. PS: 1. 安装依赖 注意一定要先安装依赖包，依赖包顺序如下（亲测、、、顺序搞错导 会导致 pip某些包无法安装） yum install wget yum install setup yum install perl yum install openssl-devel yum install zlib-devel yum groupinstall &amp;#34;Development tools&amp;#34; yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel yum install gdbm-devel db4-devel libpcap-devel xz-devel yum install zlib1g-dev yum install zlib* yum install libffi-devel yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel 2.</description></item><item><title>R730xd Ubuntu server 20.04 安装并调优</title><link>https://www.wmyeah.com/blog/dev_linux_ubuntu20.04_01/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_ubuntu20.04_01/</guid><description>目录：
1. 修改apt源为阿里云 1.1. 备份系统自带源 1.2. 修改源为阿里云 1.3. 更新apt 1.4. 关闭SNAP自动更新 关闭防火墙 2. PS: 1. 修改apt源为阿里云 1.1. 备份系统自带源 mv /etc/apt/sources.list /etc/apt/sources.list.bak 1.2. 修改源为阿里云 编辑apt源文件
vim /etc/apt/sources.list apt源文件 /etc/apt/sources.list 内容
deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb http://mirrors.</description></item><item><title>Ubuntu Server 18.0.4.4 KVM 虚拟化搭建</title><link>https://www.wmyeah.com/blog/kvm_ubuntu_01-copy/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/kvm_ubuntu_01-copy/</guid><description>目录：
1. KVM安装 1.1. 检查是否支持 1.2. 安装 cpu-checker 检查工具并检查机器是否支持 kvm 1.3. 开始安装 2. PS: 1. KVM安装 1.1. 检查是否支持 egrep -c &amp;#39;(vmx|svm)&amp;#39; /proc/cpuinfo 1.2. 安装 cpu-checker 检查工具并检查机器是否支持 kvm 安装cpu-checker apt install cpu-checker 检查 kvm-ok 1.3. 开始安装 更新apt源并且安装kvm及相关组件
apt update &amp;amp;&amp;amp; apt install qemu qemu-kvm libvirt-bin bridge-utils virt-manager 设置网络桥接 共4网卡，2网卡给虚拟机，2网卡留给物理机
network: ethernets: eno1: addresses: - 192.168.0.6/24 gateway4: 192.168.0.1 nameservers: addresses: - 192.168.0.1 eno2: addresses: - 192.168.0.5/24 gateway4: 192.168.0.1 nameservers: addresses: - 192.168.0.1 eno3: dhcp4: no dhcp6: no eno4: dhcp4: no dhcp6: no bridges: br0: interfaces: [eno3] dhcp4: no addresses: [192.</description></item><item><title>利用Crontab 定时任务自动git pull更新代码</title><link>https://www.wmyeah.com/blog/git_auto-gitpull/</link><pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/git_auto-gitpull/</guid><description>目录：
1. Crontab操作 2. 在需要更新的git项目文件夹内编辑git_pull.sh 3. PS: 1. Crontab操作 1-1、编辑crontab
crontab -e 1-2、将以下代码放入脚本
# 脚本目录、日志目录 根据自己实际情况设定 */2 * * * * /home/git_test/git_pull.sh &amp;gt;&amp;gt; /home/logs/git_pull.log 2&amp;gt;&amp;amp;1 &amp;amp; 2. 在需要更新的git项目文件夹内编辑git_pull.sh 2-1、编辑
vim git_pull.sh 2-2、内容
#!/bin/bash cu_sp_path=/home/git_test cd ${cu_sp_path} &amp;amp;&amp;amp; git pull echo &amp;#34;[&amp;#34;${cu_sp_path}&amp;#34;] update with [&amp;#34;`date`&amp;#34;]&amp;#34; 2-3、赋予权限
chmod -R 777 git_pull.sh 3. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>linux python 常用命令</title><link>https://www.wmyeah.com/blog/dev_python_002/</link><pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_python_002/</guid><description>目录：
1. Centos 篇 1.1. virtualenvwrapper 操作Python 虚拟环境virtualenv 1.1.1. 指定版本创建 1.1.2. 删除pyenv 1.1.3. 切换 py-env环境 1.1.4. 离开当前虚拟环境 2. PS: 1. Centos 篇 1.1. virtualenvwrapper 操作Python 虚拟环境virtualenv 1.1.1. 指定版本创建 virtualenv -p ${python-path} ${virtualenv-name} # ${python-path} 欲指定python 版本路径 # ${virtualenv-name} 欲指定 py-env 名称 1.1.2. 删除pyenv rmvirtualenv ${virtualenv-name} # ${virtualenv-name} py-env 名称 1.1.3. 切换 py-env环境 workon ${virtualenv-name} # ${virtualenv-name} py-env 名称 1.1.4. 离开当前虚拟环境 deactivate 2. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>Python 爬虫常用命令集锦</title><link>https://www.wmyeah.com/blog/py_sprider_01/</link><pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/py_sprider_01/</guid><description>目录：
1. 说明: 2. python BeautifulSoup怎么获取无标签文本 3. 时间函数处理 4. 关于open()的mode参数： 5. PS: 1. 说明: 常用命令集锦 2. python BeautifulSoup怎么获取无标签文本 get_name = soup_data.find_all(&amp;#39;div&amp;#39;, attrs={&amp;#39;class&amp;#39;: &amp;#39;inf-get_name&amp;#39;}) get_name = BeautifulSoup(str(get_name), &amp;#39;html.parser&amp;#39;).get_text().replace(&amp;#34;\n&amp;#34;,&amp;#34;&amp;#34;).replace(&amp;#34; &amp;#34;,&amp;#34;&amp;#34;).replace(&amp;#34;[&amp;#34;,&amp;#34;&amp;#34;).replace(&amp;#34;]&amp;#34;,&amp;#34;&amp;#34;) 3. 时间函数处理 # -*- coding:utf-8 -*- import time #当前时间 print time.time() #时间戳形式 print time.localtime(time.time()) #简单可读形式 print time.asctime( time.localtime(time.time()) ) # 格式化成2015-02-11 10:45:39形式 print time.strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, time.localtime()) # 格式化成Sat Mar 28 22:24:24 2016形式 print time.strftime(&amp;#34;%a %b %d %H:%M:%S %Y&amp;#34;, time.localtime()) # 将格式字符串转换为时间戳 a = &amp;#34;Sat Mar 28 22:24:24 2016&amp;#34; print time.</description></item><item><title>Markdown Syntax Guide</title><link>https://www.wmyeah.com/blog/markdown-syntax/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/markdown-syntax/</guid><description>Sample article showcasing basic Markdown syntax and formatting for HTML elements.</description></item><item><title>Rich Content</title><link>https://www.wmyeah.com/blog/rich-content/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/rich-content/</guid><description>A brief description of Hugo Shortcodes</description></item><item><title>Placeholder Text</title><link>https://www.wmyeah.com/blog/placeholder-text/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/placeholder-text/</guid><description>Lorem Ipsum Dolor Si Amet</description></item><item><title>Math Typesetting</title><link>https://www.wmyeah.com/blog/math-typesetting/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/math-typesetting/</guid><description>A brief guide to setup KaTeX</description></item><item><title>Emoji Support</title><link>https://www.wmyeah.com/blog/emoji-support/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/emoji-support/</guid><description>Guide to emoji usage in Hugo</description></item><item><title>Mac Pyhton3.7+Django2+Xadmin</title><link>https://www.wmyeah.com/blog/dev_python_001/</link><pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_python_001/</guid><description>目录：
1. 环境准备 1.1. Python 1.2. Django2 1.3. Xadmin 1.4. 设置 1.5. 时区及本地显示 1.6. 依赖文件处理 1.7. 修改本版本Bug 2. 部署（CentOS7） 3. PS: 1. 环境准备 1.1. Python 此处使用Python3.7 1.2. Django2 本文使用Django2.1.3 1.3. Xadmin Git远程源码安装（截止本文最新版本为2.0.1）
pip3 install git+git://github.com/sshwsfc/xadmin.git@django2 卸载 xadmin并改用本地安装(主要是为了保留依赖环境)
pip3 uninstall xadmin 将自行下载的Xadmin拖入新建工程根目录
新建apps（存放主App）
新建extra_apps目录（存放 第三方App）
将xamdin 目录从根目录下拖拽到extra_apps目录下（去掉下面的勾选）
选中《extra_apps》目录 → 右键 → Mark Directory as → Sources Root
注册 App 添加 xadmin、reversion
INSTALLED_APPS = [ &amp;#39;django.contrib.admin&amp;#39;, &amp;#39;django.contrib.auth&amp;#39;, &amp;#39;django.contrib.contenttypes&amp;#39;, &amp;#39;django.contrib.sessions&amp;#39;, &amp;#39;django.contrib.messages&amp;#39;, &amp;#39;django.contrib.staticfiles&amp;#39;, &amp;#39;xadmin&amp;#39;, &amp;#39;reversion&amp;#39; ] 说明</description></item><item><title>CentOS7.X yum方式安装最新版本Redis</title><link>https://www.wmyeah.com/blog/dev_linux_redis_01/</link><pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_redis_01/</guid><description>目录：
1. 更新yum源 2. 安装redis-rpm源 3. 安装Redis 4. 开机自启Redis 5. 设置redis.conf 6. PS: 1. 更新yum源 yum update 2. 安装redis-rpm源 yum install http://rpms.famillecollet.com/enterprise/remi-release-7.rpm 3. 安装Redis yum --enablerepo=remi install redis 4. 开机自启Redis systemctl enable redis 5. 设置redis.conf bind 127.0.0.1 改为 bind 0.0.0.0(可选) vim /etc/redis.conf 6. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有! 参考资料:</description></item><item><title>Ubuntu 18.04 安装最新版本 Nginx</title><link>https://www.wmyeah.com/blog/dev_linux_ubuntu18.04_nginx_01/</link><pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_ubuntu18.04_nginx_01/</guid><description> 1. 编辑源 2. 源内容 3. 添加nginx 公钥 4. 更新并安装 5. PS: 1. 编辑源 vim /etc/apt/sources.list.d/nginx.list 2. 源内容 deb [arch=amd64] http://nginx.org/packages/mainline/ubuntu/ bionic nginx deb-src http://nginx.org/packages/mainline/ubuntu/ bionic nginx 3. 添加nginx 公钥 下载nginx 公钥 wget http://nginx.org/keys/nginx_signing.key 添加 apt-key add nginx_signing.key 4. 更新并安装 apt update apt install nginx 5. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>CentOS7.4 zookeeper单机模式安装，并设置开机自启</title><link>https://www.wmyeah.com/blog/dev_linux_zoo_01/</link><pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_zoo_01/</guid><description>目录：
1. 更新Yum源 2. 获取最新的zookeeper Tar包 3. 安装JDK（官网下载 此处选择的是 rpm包安装） 4. 设置开机自启 5. PS: 1. 更新Yum源 yum update 2. 获取最新的zookeeper Tar包 wget http://mirrors.hust.edu.cn/apache/zookeeper/zookeeper-3.4.13/zookeeper-3.4.13.tar.gz # 解压 tar -zxvf zookeeper-3.4.13.tar.gz 3. 安装JDK（官网下载 此处选择的是 rpm包安装） rpm包主要是为了自动配置环境变量 rpm -ivh jdk-8u181-linux-x64.rpm 4. 设置开机自启 遵循系统的权限管理模式 所以 参照 系统ngix.server 服务编写 vim /usr/lib/systemd/system/zookeeper.service 内容 [Unit] Description=zookeeper After=syslog.target network.target [Service] Type=forking Environment=ZOO_LOG_DIR=/home/zookeeper/log //这里必须填写绝对路径 ExecStart=/zookeeper安装目录/bin/zkServer.sh start ExecStop=/zookeeper安装目录/zoo/bin/zkServer.sh stop Restart=always [Install] WantedBy=multi-user.target 软连接 ln -s /usr/lib/systemd/system/zookeeper.service /etc/systemd/system/zookeeper.service 5. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有! 参考资料: 1、Centos7以普通用户启动zookeeper并加入开机自启动服务</description></item><item><title>CocoaPods使用问题汇总</title><link>https://www.wmyeah.com/blog/ios_03/</link><pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/ios_03/</guid><description>目录：
1. 说明: 2. 将变化提交到暂存区 3. PS: 1. 说明: CocoaPods 使用过程中得问题记录 2. 将变化提交到暂存区 Q: gem install cocoapods ERROR: While executing gem &amp;hellip; (Gem::FilePermissionError) A: 改用如下命令 sudo gem install -n /usr/local/bin cocoapods 3. PS: 根据网上资料亲测整理，最终解释权归[WMYeah][1]所有! [1]]:http://www.wmyeah.com</description></item><item><title>CentOS6.9 后台自制shell循环任务+nohup运行SrpingBoot Jar包</title><link>https://www.wmyeah.com/blog/dev_linux_centos6.9_01/</link><pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_centos6.9_01/</guid><description>目录：
1. Shell脚本示例 2. 将写好的xxPlugin 放入/etc/init.d目录内 3. PS: 1. Shell脚本示例 #!/bin/bash #chkconfig: 2345 99 99 #description:xxPlugin # *jar 为要执行的jar包所在绝对路径 # log_file 为转储运行日志绝对路径 # 前三行必写 description:为脚本描述建议20字符以内 nohup java -jar *.jar &amp;gt;log_file &amp;amp; 2. 将写好的xxPlugin 放入/etc/init.d目录内 运行如下命令 # 添加自启服务 chkconfig --add zjbjPlugin # 查看自启服务 chkconfig --list # 如需删除请按如下命令执行 chkconfig --del zjbjPlugin 3. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>CentOS7.X 搭建LNMP平台(Yum方式)</title><link>https://www.wmyeah.com/blog/dev_linux_lnmp_01/</link><pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_lnmp_01/</guid><description>目录：
1. 说明： 2. 安装php、php-fpm 3. Nginx 4. Mysql 5. PS: 1. 说明： 基于 Centos7.3 php5.6 mysql5.6 nginx1.12.1
2. 安装php、php-fpm # 更新yum yum install epel-release rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm # 1、安装php yum install --enablerepo=remi --enablerepo=remi-php56 php php-opcache php-devel php-mbstring php-mcrypt php-mysqlnd php-phpunit-PHPUnit php-pecl-xdebug php-gd php-pecl-xhprof # Centos8 yum install http://rpms.remirepo.net/enterprise/remi-release-8.rpm yum install --enablerepo=remi --enablerepo=remi-safe php56 php56-php-opcache php-devel php56-php-mbstring php56-php-mcrypt php56-php-mysqlnd php-phpunit-PHPUnit php56-php-pecl-xdebug php56-php-pecl-xhprof apt install php5.6 php5.6-mcrypt php5.6-mbstring php5.6-curl php5.6-cli php5.6-mysql php5.</description></item><item><title>CentOS7.3Yum方式安装Nginx</title><link>https://www.wmyeah.com/blog/dev_linux_nginx_01/</link><pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_nginx_01/</guid><description>目录：
1. 更新Yum源 2. 获取最新的Nginx RPM包 3. 安装Nginx 4. 设置开机自启 5. PS: 1. 更新Yum源 yum update 2. 获取最新的Nginx RPM包 rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm 3. 安装Nginx yum install nginx 4. 设置开机自启 systemctl enable nginx 5. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有! 参考资料: 1、nginx: Linux packages</description></item><item><title>Jetty9.2 阿里云SSL配置</title><link>https://www.wmyeah.com/blog/dev_linux_jetty_02/</link><pubDate>Thu, 10 Aug 2017 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_jetty_02/</guid><description>目录：
1. 申请阿里云免费SSL证书 2. 转换证书 3. 编辑“jetty-ssl.xml”文件 4. 配置&amp;quot;jetty-https.xml &amp;ldquo; 5. 配置Jetty启动文件 6. PS: 1. 申请阿里云免费SSL证书 阿里云 → 控制台 → 安全（云盾）→ 证书服务 → 购买证书 根据如下路径申请免费证书（购买详细步骤阿里云操作提示中很详细） 2. 转换证书 xxxx.pfx : 阿里云提供的SSL PFX格式文件 your-name.jks ：新文件及命名格式（可根据项目需求自行变换） 转换命令 keytool -importkeystore -srckeystore xxxx.pfx -destkeystore your-name.jks -srcstoretype PKCS12 -deststoretype JKS 3. 编辑“jetty-ssl.xml”文件 以下下操作均在“$JETTY_HOME”目录下操作
vim etc/jetty-ssl.xml 如下配置
etc/your-name.jks : 相对于Jetty根目录的jks证书位置 your-jks-password : 证书密码 &amp;lt;Set name=&amp;#34;KeyStorePath&amp;#34;&amp;gt;&amp;lt;Property name=&amp;#34;jetty.base&amp;#34; default=&amp;#34;.&amp;#34; /&amp;gt;/&amp;lt;Property name=&amp;#34;jetty.keystore&amp;#34; default=&amp;#34;etc/your-name.jks&amp;#34;/&amp;gt;&amp;lt;/Set&amp;gt; &amp;lt;Set name=&amp;#34;KeyStorePassword&amp;#34;&amp;gt;&amp;lt;Property name=&amp;#34;jetty.keystore.password&amp;#34; default=&amp;#34;your-jks-password&amp;#34;/&amp;gt;&amp;lt;/Set&amp;gt; &amp;lt;Set name=&amp;#34;KeyManagerPassword&amp;#34;&amp;gt;&amp;lt;Property name=&amp;#34;jetty.keymanager.password&amp;#34; default=&amp;#34;your-jks-password&amp;#34;/&amp;gt;&amp;lt;/Set&amp;gt; &amp;lt;Set name=&amp;#34;TrustStorePath&amp;#34;&amp;gt;&amp;lt;Property name=&amp;#34;jetty.</description></item><item><title>CentOS7.X 新装后个性化处理</title><link>https://www.wmyeah.com/blog/dev_linux_centos7_01/</link><pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_centos7_01/</guid><description>目录：
1. 修改HostName 2. Shell脚本中文乱码问题解决 3. 部分常用开发工具安装 4. 关闭防火墙 5. 关闭SELinux 6. 更换yum源及安装EPEL源 7. PS: 1. 修改HostName # 设置自定义HostName hostnamectl set-hostname MyHostName # 查看一下是否生效 hostnamectl status 2. Shell脚本中文乱码问题解决 vim /etc/locale.conf ## 将默认语言改为中文UTF-8 LANG=zh_CN.UTF-8 3. 部分常用开发工具安装 yum -y install nano vim wget curl net-tools lsof unzip unzip 4. 关闭防火墙 systemctl stop firewalld systemctl disable firewalld 5. 关闭SELinux sed -i &amp;#39;s#SELINUX=enforcing#SELINUX=disabled#g&amp;#39; /etc/selinux/config # 查看 grep &amp;#39;SELINUX=disabled&amp;#39; /etc/selinux/config 6. 更换yum源及安装EPEL源 mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup wget -O /etc/yum.</description></item><item><title>git相关配置</title><link>https://www.wmyeah.com/blog/git_config_01/</link><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/git_config_01/</guid><description>目录：
1. 说明: 2. 关于LF和CRLF的处理 处理core.autocrlf 处理core.safecrlf 处理案例: 1. 说明: git相关配置，方便跨平台 2. 关于LF和CRLF的处理 处理core.autocrlf core.autocrlf 的默认值是false core.autocrlf是git中负责处理line ending的变量，可以设置3个值： true 提交时改成LF，检出时改成CRLF input 提交时改成LF，检出时不改 false (默认值) 提交时是什么就是什么，不改换行符，检出时也不 处理core.safecrlf 默认值是warn core.safecrlf 默认值可设置3个： true 拒绝提交包含混合换行符的文件 （会提示 Fatal:xxx） false 允许提交包含混合换行符的文件 warn 提交包含混合换行符的文件时给出警告 (默认值) 处理案例: git config --global core.autocrlf input git config --global core.safecrlf true 根据网上资料亲测整理，最终解释权归[WMYeah][1]所有! [1]]:http://www.wmyeah.com</description></item><item><title>git修改忽略文件“.gitignore”并立即生效</title><link>https://www.wmyeah.com/blog/git_msg_01/</link><pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/git_msg_01/</guid><description>目录：
1. 说明: 2. 清除缓存 记得 带“.” 3. 将变化提交到暂存区 4. 提交并填写相关信息 5. 可选同步到远程分支 获取最新的tag 1. 说明: 有时候我们得修改忽略文件并立即生效,这样方便我们精细化管理git仓库 2. 清除缓存 记得 带“.” git rm -r --cached . 3. 将变化提交到暂存区 git add . 4. 提交并填写相关信息 git commit -m &amp;#34;update .gitignore&amp;#34; 5. 可选同步到远程分支 git push 或者 git push origin master 获取最新的tag git describe --tags --exact-match --abbrev=0 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>Android JNI编译so动态库技巧(Mac环境)</title><link>https://www.wmyeah.com/blog/android_01/</link><pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/android_01/</guid><description>目录：
1. 工具及环境 1.1. 系统及硬件平台 1.2. 软件及相关工具包 2. PS: 1. 工具及环境 1.1. 系统及硬件平台 MacBook Air(made on 2013) MacOS Sierra(10.12.1) 1.2. 软件及相关工具包 Eclipse(Neon)Java EE IDE For Mac(主要为了省事兼顾Java后台CodeReview、根据自身需求选择Eclipse版本) ADT(23.0.7) -PS:Goole官方ADT插件 Android SDK Manager Tools(24.0.1) -PS：有了这个就可以选择下载最新的Android SDK 了（2016-3月份后SDK的下载已经不被墙了，国内多地使用过，操作地域：太原，北京、深圳、西安、上海、杭州） NDK(version-13b) 2. PS: 根据网上资料亲测整理，最终解释权归[WMYeah][1]所有!
参考资料:
1、[Xcode 6制作动态及静态Framework][2] [1]]:http://www.wmyeah.com
[2]]:http://www.cocoachina.com/ios/20141126/10322.html</description></item><item><title>嵌入式开发之MacOS、iOS串口通讯开发环境准备</title><link>https://www.wmyeah.com/blog/embedded_01/</link><pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/embedded_01/</guid><description>目录：
1. 说明 2. 准备串口线及对应串口传唤器驱动 2.1. 线材准备 2.2. 对应驱动准备 3. 下载可视化连接工具&amp;quot;CoolTerm_Mac&amp;quot; 4. 验证是否驱动安装完成 5. PS: 1. 说明 WARNING 凡所涉及线材及设备,请自行准备此处仅为当前条件随便购买 2. 准备串口线及对应串口传唤器驱动 2.1. 线材准备 优越者 Y-105 USB转RS232 工口
优越者 Y-105D USB转RS232 母口
2.2. 对应驱动准备 购买线材时随附光盘中一般会有
点这里下载基于PL-2303芯片驱动
点这里下载CH430G For Mac 驱动下载
点这里下载CH430G For Linux 驱动下载
3. 下载可视化连接工具&amp;quot;CoolTerm_Mac&amp;quot; CoolTerm_Mac下载地址 4. 验证是否驱动安装完成 设置连接选项
在另一台准备好的机器上输入测试字符
5. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有!
参考资料:
1、Roger Meier&amp;rsquo;s Freeware 2、Mac&amp;rsquo;s and serial TTY&amp;rsquo;s 2、在MAC OS X下安装usb转串口驱动（PL2303主控芯片）</description></item><item><title>ubuntu lvm 扩容</title><link>https://www.wmyeah.com/blog/ubuntu_lvm_extentions/</link><pubDate>Wed, 26 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/ubuntu_lvm_extentions/</guid><description> 1. ubuntu lvm 扩容 2. 内存虚拟盘 2.1. 临时挂载 2.2. 永久挂载 1. ubuntu lvm 扩容 lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv 2. 内存虚拟盘 2.1. 临时挂载 mount -t tmpfs -o size=512G tmpfs /datas/plots_tmp 2.2. 永久挂载 vim /etc/fstab tmpfs /datas/plots_tmp tmpfs defaults,size=512G 0 0</description></item><item><title>Windows 一键查看已连接过的WIFI密码</title><link>https://www.wmyeah.com/blog/dev_other_00/</link><pubDate>Wed, 26 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_other_00/</guid><description>目录：
1. 说明: 2. CMD命令 3. PS: 1. 说明: WARNING 请谨慎使用此命令，一切造成的后果请各位自行承担 2. CMD命令 for /f &amp;#34;skip=9 tokens=1,2 delims=:&amp;#34; %i in (&amp;#39;netsh wlan show profiles&amp;#39;) do @echo %j | findstr -i -v echo | netsh wlan show profiles %j key=clear 3. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有!</description></item><item><title>iOS .Framework SDK开发注意事项</title><link>https://www.wmyeah.com/blog/ios_01/</link><pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/ios_01/</guid><description>目录：
1. 搜索 Library 设置工程模式为 Static Library 2. 注意事项: 3. Run Sripte 内容如下 4. 脚本设置成功后 直接选择Target “Comand + B” 编译就OK 5. PS: 1. 搜索 Library 设置工程模式为 Static Library 2. 注意事项: -Option 目前支持选项 Source.boundle 即同名资源Bundle文件 3. Run Sripte 内容如下 # 如果工程名称和Framework的Target名称不一样的话，要自定义FMKNAME 例如: FMK_NAME = &amp;#34;MyFramework&amp;#34; FMK_NAME=${PROJECT_NAME} # ---Option 打包资源Bundle FMK_Source_NAME=${PROJECT_NAME}&amp;#34;Source&amp;#34; # 设置打包导出目录 INSTALL_DIR_SRC=${SRCROOT}/Libs/${FMK_NAME} INSTALL_DIR=${INSTALL_DIR_SRC}/${FMK_NAME}.framework # 设置打包源文件空间 WRK_DIR=build DEVICE_DIR=${WRK_DIR}/Release-iphoneos/${FMK_NAME}.framework SIMULATOR_DIR=${WRK_DIR}/Release-iphonesimulator/${FMK_NAME}.framework # Bundle文件目录 FMK_Source_DIR=${WRK_DIR}/Release-iphoneos/${FMK_Source_NAME}.bundle # xcodebuild 命令相关设置 # Clean and Building both architectures. xcodebuild -configuration &amp;#34;Release&amp;#34; -target &amp;#34;${FMK_NAME}&amp;#34; -sdk iphoneos clean build xcodebuild -configuration &amp;#34;Release&amp;#34; -target &amp;#34;${FMK_NAME}&amp;#34; -sdk iphonesimulator clean build # 使用xcodebuild 打包Bundle xcodebuild -configuration &amp;#34;Release&amp;#34; -target &amp;#34;${FMK_Source_NAME}&amp;#34; -sdk iphoneos clean build # 清除并新建INSTALL_DIR目录 if [ -d &amp;#34;${INSTALL_DIR}&amp;#34; ] then rm -rf &amp;#34;${INSTALL_DIR}&amp;#34; fi mkdir -p &amp;#34;${INSTALL_DIR}&amp;#34; # 拷贝 .</description></item><item><title>制作cocoapods开源库-命令备忘</title><link>https://www.wmyeah.com/blog/ios_02/</link><pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/ios_02/</guid><description>目录：
1. 说明: 2. Git操作 2.1. 将变化提交到暂存区 2.2. 提交并填写相关信息 2.3. 打tag 2.4. 同步tag 3. pod trunk相关 3.1. 注册pod trunk 3.2. 在项目根目录下，创建podspec文件 3.3. 查看注册信息 3.4. 验证Pods库是否正确 3.5. 上传至cocoaPods 4. PS: 1. 说明: 记录常用命令用以备忘 2. Git操作 2.1. 将变化提交到暂存区 git add . 2.2. 提交并填写相关信息 git commit -m &amp;#34;release-Version-xxx&amp;#34; 2.3. 打tag git tag x.x.x 2.4. 同步tag git push --tags 3. pod trunk相关 3.1. 注册pod trunk # Description 为描述 # xxx@xxx.com 为邮箱 # --tag 为标识 #--description 自我描述 pod trunk register xxx@xxx.</description></item><item><title>Linux Net相关命令收集</title><link>https://www.wmyeah.com/blog/linux_net_01/</link><pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/linux_net_01/</guid><description>目录：
1. 查看443的TCP连接数 2. PS: 1. 查看443的TCP连接数 netstat -anp | grep :443 | grep ESTABLISHED | wc -l 或者
lsof -i:443 | grep ESTABLISHED | grep TCP | wc -l 2. PS: 根据网上资料亲测整理，最终解释权归[WMYeah][1]所有! [1]]:http://www.wmyeah.com</description></item><item><title>Ubuntu 14.0.4 mysql 存储目录迁移</title><link>https://www.wmyeah.com/blog/dev_linux_05/</link><pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_05/</guid><description>目录：
1. 说明: 2. 停止mysql 3. 建立迁移目的地文件夹 4. 修改所属用户及所属用户组为mysql 5. 修改权限 6. 拷贝&amp;quot;/var/lib/mysql/*&amp;ldquo;所有文件 7. 修改mysql的配置文件 8. 修改shell文件 9. 重新启动apparmor和mysql 10. 删除原有文件 (-Option) 11. PS: 1. 说明: parmars -mysqlDir- 新的mysql存储目录
例如：/home/mysqlData/ WARNING 注意代码中的引用到的参数
2. 停止mysql sudo service mysql stop 3. 建立迁移目的地文件夹 sudo mkdir -p -mysqlDir- 4. 修改所属用户及所属用户组为mysql sudo chown -vR mysql:mysql -mysqlDir- 5. 修改权限 sudo chmod -vR 700 -mysqlDir- 6. 拷贝&amp;rdquo;/var/lib/mysql/*&amp;ldquo;所有文件 sudo cp -av /var/lib/mysql/* -mysqlDir- 7. 修改mysql的配置文件 sudo vi /etc/mysql/my.cnf 将</description></item><item><title>Ubuntu 14.0.4 phpMyAdmin 报错："缺少mcrypt扩展,请检查 PHP 配置"解决方案</title><link>https://www.wmyeah.com/blog/dev_linux_01/</link><pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_01/</guid><description>目录：
mcryp模块安装 mcrypt模块加载 1. 开启mcrypt模块 2. 查看apache2 配置文件 重启apache2 PS: mcryp模块安装 sudo apt-get install php5-mcrypt mcrypt模块加载 1. 开启mcrypt模块 sudo php5enmod mcrypt 2. 查看apache2 配置文件 进入目录：&amp;quot;/etc/php5/apache2/conf.d/&amp;quot; 和 &amp;ldquo;/etc/php5/mods-available/&amp;rdquo; 检查是否有mcrypt.ini文件 重启apache2 sudo service apache2 restart PS: 根据网上资料亲测整理，最终解释权归[WMYeah][1]所有!
参考资料:
1、[缺少 mcrypt 扩展。请检查 PHP 配置。][2] [1]]:http://www.wmyeah.com
[2]]:http://blog.csdn.net/wang1144/article/details/51505887?locationNum=12</description></item><item><title>Ubuntu 14.0.4 安装并配置Gitolite服务器</title><link>https://www.wmyeah.com/blog/dev_linux_07/</link><pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_07/</guid><description>目录：
1. 说明 2. 添加用户并配置git用户HOME目录 3. 将用户添加到SSH服务组 4. 设置Git密码 5. 配置GitGlobal 6. 生成SSHKey 7. 拷贝并重命名 .Pub 公钥 8. clone Git源码库 9. 新建&amp;quot;$HOME/bin&amp;quot;文件夹 10. 将git安装到&amp;quot;$HOME/bin&amp;quot;目录 11. 初始化gitolite程序 12. clone gitolite管理库&amp;quot;gitolite-admin.git&amp;quot; 13. PS: 1. 说明 parmars -gitHomeDir- git用户HOME目录
例如：/home/git/ parmars -USERNAME- //用户名
parmars -git_User_Name- //用户名
parmars -git_User_Email- //Email
WARNING 注意代码中的引用到的参数
2. 添加用户并配置git用户HOME目录 sudo adduser --system --shell /bin/bash --home -gitHomeDir- --group git sudo adduser --system --shell /bin/bash --home /datas/git- --group git 3. 将用户添加到SSH服务组 sudo adduser git ssh 4.</description></item><item><title>Ubuntu 14.0.4 配置静态IP</title><link>https://www.wmyeah.com/blog/dev_linux_04/</link><pubDate>Sat, 18 Apr 2015 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_04/</guid><description>目录：
1. 参数说明 2. 编辑&amp;quot;/etc/network/interfaces&amp;quot;文件 3. 编辑&amp;quot;/etc/resolvconf/resolv.conf.d/base&amp;quot;文件 4. 重启networking服务使其生效： 5. PS: 1. 参数说明 本例以192.168.1.0(255.255.255.0)网段为例 2. 编辑&amp;quot;/etc/network/interfaces&amp;quot;文件 sudo vi /etc/network/interfaces 新增如下内容
auto eth0 iface eth0 inet static address 192.168.1.88 netmask 255.255.255.0 gateway 192.168.1.1 3. 编辑&amp;quot;/etc/resolvconf/resolv.conf.d/base&amp;quot;文件 sudo vi /etc/resolvconf/resolv.conf.d/base 输入如下内容
nameserver 192.168.1.1 nameserver 8.8.8.8 4. 重启networking服务使其生效： /etc/init.d/networking restart 5. PS: 根据网上资料亲测整理，最终解释权归WMYeah所有!
参考资料:
1、ubuntu 14.10系统怎么设置静态ip？ 2、Ubuntu Server 12.04(14.04) 静态IP简洁配置</description></item><item><title>在Ubuntu 14.0.4 LTS Apache virtualhost 虚拟主机相关设置(包含https)</title><link>https://www.wmyeah.com/blog/dev_linux_03/</link><pubDate>Sat, 18 Apr 2015 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_03/</guid><description>目录：
1. 说明： 2. 创建存放所有Web项目的相关目录 2.1. web 根目录 2.2. 项目A 根目录 2.3. 项目B 根目录 2.4. 赋予相关目录权限 3. apache2.conf 相关设置 3.1. 备份原有配置文件 3.2. 编辑 apache2.conf 4. 设置 apache 虚拟主机 4.1. 编辑 -Domain_A-.conf 文件 4.1.1. 拷贝样例 4.1.2. 编辑 4.1.2.1. 根据需求设置 4.1.2.2. 设置https支持 (-Option) 4.2. 编辑-Domain_B-.conf文件 5. 启用配置 5.1. 进入 “/etc/apache2/sites-available” 目录 5.2. 禁用系统默认解析文件 “000-default.conf” 5.3. 启用配置好的文件 “-Domain_A-.conf” 6. 开启apache ssl支持 (-Option) 7. 重启Apache2服务 8. 访问站点: 9. PS: 1. 说明： parmars -webDir- 存放所有Web项目的Linux文件系统绝对目录</description></item><item><title>Ubuntu 14.0.4搭建LAMP+phpmyadmin Web服务器</title><link>https://www.wmyeah.com/blog/dev_linux_02/</link><pubDate>Wed, 08 Apr 2015 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_02/</guid><description>目录：
1. 安装mysql-server、mysql-client 2. 安装apache2 3. 安装php5 php5 libapache2-mod-php5(apache php5支持模块) 4. 安装php5常用模块 5. 安装数据库管理工具 phpMyadmin 6. 重启apache2 7. 访问站点: 8. PS: 1. 安装mysql-server、mysql-client sudo apt-get install mysql-server mysql-client 2. 安装apache2 sudo apt-get install apache2 3. 安装php5 php5 libapache2-mod-php5(apache php5支持模块) sudo apt-get install php5 libapache2-mod-php5 4. 安装php5常用模块 sudo apt-get install php5-mysql php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl``` 5. 安装数据库管理工具 phpMyadmin sudo apt-get install phpmyadmin 6.</description></item><item><title>Linux 基操</title><link>https://www.wmyeah.com/blog/linux_ntp_01/</link><pubDate>Thu, 12 Mar 2015 10:06:35 +0000</pubDate><guid>https://www.wmyeah.com/blog/linux_ntp_01/</guid><description>目录：
1. 、国内常用NTP服务器 2. 、使用Let&amp;rsquo;s Encrypt 申请 泛域名ssl证书 3. PS: 1. 、国内常用NTP服务器 国家授时中心新的NTP服务器地址： ntp.ntsc.ac.cn 阿里云 ntp.aliyun.com 国内大学 s1c.time.edu.cn 北京大学 s2m.time.edu.cn 北京大学 s1b.time.edu.cn 清华大学 s1e.time.edu.cn 清华大学 s2a.time.edu.cn 清华大学 s2b.time.edu.cn 清华大学 国外授时服务器 #苹果提供的授时服务器 time1.apple.com time2.apple.com time3.apple.com time4.apple.com time5.apple.com time6.apple.com time7.apple.com #Google提供的授时服务器 time1.google.com time2.google.com time3.google.com time4.google.com 2. 、使用Let&amp;rsquo;s Encrypt 申请 泛域名ssl证书 命令（Ubuntu serve 18.04.4） certbot certonly --preferred-challenges dns --manual -d *.example.com --server https://acme-v02.api.letsencrypt.org/directory 需要dns验证 自己操作增加txt 验证即可 默认在 /etc/letsencrypt/live/ 目录下 为了和阿里云配置保持同步做了两个注记命令 阿里云为 pem 和 key 结尾 这里都是pem cp /etc/letsencrypt/live/$mydomain.</description></item><item><title>Ubuntu 14.0.4 Linux SVN Server搭建</title><link>https://www.wmyeah.com/blog/dev_linux_06/</link><pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/dev_linux_06/</guid><description>目录：
1. 说明: 2. 安装subversion 3. 创建版本库 4. 配置&amp;quot;svnserve.conf&amp;quot;版本库信息 5. 配置&amp;quot;passwd&amp;quot;用户信息 6. 配置&amp;quot;authz&amp;quot;用户授权 7. 设置开机自启动SVN服务 8. PS: 1. 说明: parmars -svnDir- SVN项目统一存放路径
例如：/home/svnProjects/ parmars -svnDir_Project01- 暂命名为“Project01”的SVN库地址
例如：/home/svnProjects/svnP1/ WARNING 注意代码中的引用到的参数
2. 安装subversion sudo apt-get install subversion 3. 创建版本库 sudo mkdir -p -svnDir_Project01- sudo svnadmin create -svnDir_Project01- 4. 配置&amp;quot;svnserve.conf&amp;quot;版本库信息 sudo vi -svnDir_Project01-/conf/svnserve.conf 将以下参数注释掉
[general] anon-access = none #匿名访问权限，默认read，none为不允许访问 auth-access = write #认证用户权限 password-db = passwd #用户信息，默认在版本库/conf下面,如需更改请填写文件绝对路径 authz-db = authz 5. 配置&amp;quot;passwd&amp;quot;用户信息 sudo vi -svnDir_Project01-/conf/passwd 按如下格式添加用户</description></item><item><title>Contact Me</title><link>https://www.wmyeah.com/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/contact/</guid><description>How can I help you?</description></item><item><title>Thanks</title><link>https://www.wmyeah.com/thanks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/thanks/</guid><description>Thanks for the submission</description></item></channel></rss>