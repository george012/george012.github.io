<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>iOS on WMYeah</title><link>https://www.wmyeah.com/categories/ios/</link><description>Recent content in iOS on WMYeah</description><image><url>https://www.wmyeah.com/uploads/og.webp</url><link>https://www.wmyeah.com/uploads/og.webp</link></image><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>A template by [Heksagon](https://www.heksagon.net "Your most friendly developer")</copyright><lastBuildDate>Sun, 08 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.wmyeah.com/categories/ios/index.xml" rel="self" type="application/rss+xml"/><item><title>CocoaPods使用问题汇总</title><link>https://www.wmyeah.com/blog/ios_03/</link><pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/ios_03/</guid><description>目录：
1. 说明: 2. 将变化提交到暂存区 3. PS: 1. 说明: CocoaPods 使用过程中得问题记录 2. 将变化提交到暂存区 Q: gem install cocoapods ERROR: While executing gem &amp;hellip; (Gem::FilePermissionError) A: 改用如下命令 sudo gem install -n /usr/local/bin cocoapods 3. PS: 根据网上资料亲测整理，最终解释权归[WMYeah][1]所有! [1]]:http://www.wmyeah.com</description></item><item><title>iOS .Framework SDK开发注意事项</title><link>https://www.wmyeah.com/blog/ios_01/</link><pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/ios_01/</guid><description>目录：
1. 搜索 Library 设置工程模式为 Static Library 2. 注意事项: 3. Run Sripte 内容如下 4. 脚本设置成功后 直接选择Target “Comand + B” 编译就OK 5. PS: 1. 搜索 Library 设置工程模式为 Static Library 2. 注意事项: -Option 目前支持选项 Source.boundle 即同名资源Bundle文件 3. Run Sripte 内容如下 # 如果工程名称和Framework的Target名称不一样的话，要自定义FMKNAME 例如: FMK_NAME = &amp;#34;MyFramework&amp;#34; FMK_NAME=${PROJECT_NAME} # ---Option 打包资源Bundle FMK_Source_NAME=${PROJECT_NAME}&amp;#34;Source&amp;#34; # 设置打包导出目录 INSTALL_DIR_SRC=${SRCROOT}/Libs/${FMK_NAME} INSTALL_DIR=${INSTALL_DIR_SRC}/${FMK_NAME}.framework # 设置打包源文件空间 WRK_DIR=build DEVICE_DIR=${WRK_DIR}/Release-iphoneos/${FMK_NAME}.framework SIMULATOR_DIR=${WRK_DIR}/Release-iphonesimulator/${FMK_NAME}.framework # Bundle文件目录 FMK_Source_DIR=${WRK_DIR}/Release-iphoneos/${FMK_Source_NAME}.bundle # xcodebuild 命令相关设置 # Clean and Building both architectures. xcodebuild -configuration &amp;#34;Release&amp;#34; -target &amp;#34;${FMK_NAME}&amp;#34; -sdk iphoneos clean build xcodebuild -configuration &amp;#34;Release&amp;#34; -target &amp;#34;${FMK_NAME}&amp;#34; -sdk iphonesimulator clean build # 使用xcodebuild 打包Bundle xcodebuild -configuration &amp;#34;Release&amp;#34; -target &amp;#34;${FMK_Source_NAME}&amp;#34; -sdk iphoneos clean build # 清除并新建INSTALL_DIR目录 if [ -d &amp;#34;${INSTALL_DIR}&amp;#34; ] then rm -rf &amp;#34;${INSTALL_DIR}&amp;#34; fi mkdir -p &amp;#34;${INSTALL_DIR}&amp;#34; # 拷贝 .</description></item><item><title>制作cocoapods开源库-命令备忘</title><link>https://www.wmyeah.com/blog/ios_02/</link><pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.wmyeah.com/blog/ios_02/</guid><description>目录：
1. 说明: 2. Git操作 2.1. 将变化提交到暂存区 2.2. 提交并填写相关信息 2.3. 打tag 2.4. 同步tag 3. pod trunk相关 3.1. 注册pod trunk 3.2. 在项目根目录下，创建podspec文件 3.3. 查看注册信息 3.4. 验证Pods库是否正确 3.5. 上传至cocoaPods 4. PS: 1. 说明: 记录常用命令用以备忘 2. Git操作 2.1. 将变化提交到暂存区 git add . 2.2. 提交并填写相关信息 git commit -m &amp;#34;release-Version-xxx&amp;#34; 2.3. 打tag git tag x.x.x 2.4. 同步tag git push --tags 3. pod trunk相关 3.1. 注册pod trunk # Description 为描述 # xxx@xxx.com 为邮箱 # --tag 为标识 #--description 自我描述 pod trunk register xxx@xxx.</description></item></channel></rss>